{"version":3,"sources":["img/close.svg","components/AddPlayer.js","components/Square.js","components/Board.js","components/Game.js","helper.js","components/FinalWinner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AddPlayer","props","handelPlayer1Change","e","preventDefault","setState","player1","target","value","handelPlayer2Change","player2","setRedirect","getPlayer","state","history","push","className","style","color","type","this","onChange","placeholder","Validate","onClick","Component","Square","Board","squares","map","square","i","key","Game","useState","Array","fill","values","setValues","players","setPlayers","xIsNext","setXisNext","winner","lines","length","a","b","c","Winner","xO","Allplayer","id","src","close","alt","historyPoint","slice","current","App","player","getPlayers","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ca3d65be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.2a9c8174.svg\";","import React, { Component } from 'react';\n\nclass AddPlayer extends Component {\n\n     constructor(props){\n         super(props)\n         this.state={\n             player1: null,\n             player2: null,\n            \n         }\n         \n     }\n\n     handelPlayer1Change = (e) =>{\n        e.preventDefault();\n         this.setState ({\n            player1:e.target.value\n         })\n     }\n\n\n    handelPlayer2Change = (e) =>{\n        e.preventDefault();\n         this.setState ({\n            player2:e.target.value\n         })\n     }\n\n     setRedirect = () => {\n        this.props.getPlayer(this.state.player1, this.state.player2);\n        this.props.history.push(\"/Game\");\n      }\n\n\n    render() {\n          \n        return (\n            <div>\n                <body>\n                    <div className=\"logo\"></div>\n                    <div className=\"main-border\">\n                        <div className=\"wrapper clearfix\">\n                            <h1>Welcome To <span style={{color: \"#FBA202\"}}>TIC TAC TOE</span></h1>\n\n                            <div className=\"user-form\">\n                            <p>PLAYER 1</p>\n                            <input type=\"text\"  value= {this.state.player1} onChange= {this.handelPlayer1Change} placeholder=\"\" Validate/>\n\n                            <p>PLAYER 2</p>\n\n                            <input type=\"text\" value= {this.state.player2} onChange= {this.handelPlayer2Change} placeholder=\"\" Validate/>\n                           \n                            <button type=\"submit\" className=\"button-calss\" onClick={this.setRedirect}>Continue</button>\n                            </div>\n                            \n                        </div>\n                        </div>\n                </body>\n            </div>\n        );\n    }\n}\n\nexport default AddPlayer;","import React from \"react\";\r\n\r\nconst Square = ({ value, onClick }) => {\r\n  const style = value ? `squares ${value}` : `squares`;\r\n\r\n  return (\r\n    <button className={style} onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nconst Board = ({ squares, onClick }) => (\r\n  <div className=\"board\">\r\n    {squares.map((square, i) => (\r\n      <Square key={i} value={square} onClick={() => onClick(i)} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\nimport { Winner } from \"../helper\";\nimport Board from \"./Board\";\nimport close from '../img/close.svg'\n\n\nconst Game = (props) => {\n\n  const [values, setValues] = useState([Array(9).fill(null)]);\n  const [players, setPlayers] = useState(0);\n  const [xIsNext, setXisNext] = useState(true);\n\n\n  const winner = Winner(values[players]);\n  const xO = xIsNext ? \"X\" : \"O\";\n \n  // handler function for move\n  const handleClick = (i) => {\n    const historyPoint = values.slice(0, players + 1);\n    const current = historyPoint[players];\n    const squares = [...current];\n\n    // return if won or occupied\n    if (winner || squares[i]) return;\n\n    // select square\n    squares[i] = xO;\n    setValues([...historyPoint, squares]);\n    setPlayers(historyPoint.length);\n    setXisNext(!xIsNext);\n  };\n\n // Game Reset function\n  const reset = () => {\n    setValues([Array(9).fill(null)]);\n    setPlayers(0);\n    setXisNext(true);\n  };\n\n  const {\n    player1,\n    player2\n  } = props.Allplayer;\n\n  return (\n    \n    <body>\n\n    <div className=\"logo\"></div>\n      \n         {/* Player-2 Board*/}\n\n    {winner === \"X\"?<div className=\"winn-x-turn\">WINNER!</div>:winner===null && xO==='X'?<div className=\"x-turn\">YOUR TURN</div>:''}\n        <div className={winner === \"X\"?\"player-one-box sucess\": \"player-one-box\"}>\n            <div className=\"player-one-label\">PLAYER 1</div>\n            <div className=\"player-one-name\" id=\"current-0\">{player1}</div>\n            <div className=\"player-one-symbol\"> </div>\n        </div>\n    <div className=\"turn-1\"></div>\n    \n\n    {/* Reset Button*/}\n\n    <div className=\"reset\" onClick={reset}><img src={close} alt=\"Reset\"/></div>\n    \n    {/* Game Board */}\n\n    <div className=\"main-border\">\n        <div className=\"wrapper clearfix\">\n            <Board squares={values[players]} onClick={handleClick} />\n        </div>\n    </div>\n\n    {/* Player-2 Board*/}\n\n    {winner === \"O\"?<div className=\"winn-o-turn\">WINNER!</div>:winner===null && xO === \"O\"?<div className=\"o-turn\">YOUR TURN</div>:''}\n    <div className={winner === \"O\"?\"player-two-box sucess\": \"player-two-box\"}>\n          <div className=\"player-two-label\">PLAYER 2</div>\n          <div className=\"player-two-name\" id=\"current-1\">{player2}</div>\n          <div className=\"player-two-symbol\"></div>\n    </div>\n    <div className=\"turn-2\"></div>\n\n\n</body>\n  \n  );\n};\n\nexport default Game;\n","export function Winner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}","import React, { Component } from 'react'\n\nexport default class FinalWinner extends Component {\n    render() {\n        return (\n            <body>\n                <div className=\"main-border\">\n                    <div className=\"wrapper clearfix\">\n                    <div className=\"o-turn\">WINNER!</div>\n                        <div className=\"winner-box\">\n                            <div className=\"winner-label\">PLAYER 2</div>\n                            <div className=\"winner-name\" id=\"current-1\">Naresh</div>\n                            <div className=\"winner-symbol\"></div>\n                        </div>\n                    </div>\n                </div>\n            </body>\n        )\n    }\n}\n","import React, {useState}from 'react';\nimport './App.css';\nimport AddPlayer from './components/AddPlayer';\nimport  { BrowserRouter as Router, Route, } from 'react-router-dom';\nimport Game from './components/Game';\nimport FinalWinner from './components/FinalWinner';\n\n\nfunction App() {\n\n  const [player, setPlayers] = useState ({})\n\n  function getPlayers (player1, player2){\n    setPlayers ({player1, player2})\n  }\n\n  return (\n    <div className=\"App\">\n   <Router>\n     <Route path=\"/\" render={(props)=><AddPlayer {...props} getPlayer= {getPlayers} />} />\n     <Route path=\"/Game\" render={(props)=><Game {...props} Allplayer= {player} />} />\n   </Router>\n{/* <FinalWinner/> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}